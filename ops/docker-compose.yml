services:
  mongo:
    image: mongo:latest
    container_name: "clai_mongo"
    logging:
      options:
        max-size: 1g
    environment:
      MONGO_INITDB_ROOT_USERNAME: "clai"
      MONGO_INITDB_ROOT_PASSWORD: "clai"
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - local
    restart: always

  qdrant:
    image: qdrant/qdrant:latest
    container_name: "clai_qdrant"
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - local
    restart: always

  zenml:
    image: zenmldocker/zenml-server:0.85.0
    container_name: "clai_zenml"
    ports:
      - "8237:8080"
    environment:
      - ZENML_HOST=0.0.0.0
    volumes:
      - zenml_data:/root/.zenml
    networks:
      - local
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: "clai_postgres"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - local
    restart: always

  mlflow:
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    container_name: "clai_mlflow"
    ports:
      - "5000:5000"
    command: sh /mlflow/start-mlflow.sh
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      MLFLOW_DATABASE: ${MLFLOW_DATABASE}
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
    depends_on:
      - postgres
    networks:
      - local
    restart: unless-stopped

volumes:
  mongo_data:
  qdrant_data:
  zenml_data:
  postgres_data:

networks:
  local:
    driver: bridge
